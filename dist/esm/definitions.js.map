{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAuBA,MAAM,CAAC,MAAM,eAAe,GAAG;IAC7B,SAAS,EAAE,WAAW;IACtB,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;CACJ,CAAC","sourcesContent":["import type { Directory } from '@capacitor/filesystem';\r\n\r\nexport type Base64String = string;\r\n\r\nexport interface RecordingData {\r\n  value: {\r\n    recordDataBase64?: Base64String;\r\n    msDuration: number;\r\n    mimeType: string;\r\n    uri?: string;\r\n  };\r\n}\r\n\r\nexport type RecordingOptions =  never | {\r\n    directory: Directory;\r\n    subDirectory?: string;\r\n    path?: string;\r\n  };\r\n\r\nexport interface GenericResponse {\r\n  value: boolean;\r\n}\r\n\r\nexport const RecordingStatus = {\r\n  RECORDING: 'RECORDING',\r\n  PAUSED: 'PAUSED',\r\n  NONE: 'NONE',\r\n} as const;\r\n\r\nexport interface CurrentRecordingStatus {\r\n  status: (typeof RecordingStatus)[keyof typeof RecordingStatus];\r\n}\r\n\r\nexport interface VoiceRecorderPlugin {\r\n  canDeviceVoiceRecord(): Promise<GenericResponse>;\r\n\r\n  requestAudioRecordingPermission(): Promise<GenericResponse>;\r\n\r\n  hasAudioRecordingPermission(): Promise<GenericResponse>;\r\n\r\n  startRecording(options?: RecordingOptions): Promise<GenericResponse>;\r\n\r\n  stopRecording(): Promise<RecordingData>;\r\n\r\n  pauseRecording(): Promise<GenericResponse>;\r\n\r\n  resumeRecording(): Promise<GenericResponse>;\r\n\r\n  getCurrentStatus(): Promise<CurrentRecordingStatus>;\r\n}\r\n"]}