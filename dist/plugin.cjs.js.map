{"version":3,"file":"plugin.cjs.js","sources":["esm/definitions.js","esm/index.js","esm/predefined-web-responses.js","esm/VoiceRecorderImpl.js","esm/web.js"],"sourcesContent":["export const RecordingStatus = {\r\n    RECORDING: 'RECORDING',\r\n    PAUSED: 'PAUSED',\r\n    NONE: 'NONE',\r\n};\r\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\r\nconst VoiceRecorder = registerPlugin('VoiceRecorder', {\r\n    web: () => import('./web').then((m) => new m.VoiceRecorderWeb()),\r\n});\r\nexport * from './definitions';\r\nexport { VoiceRecorder };\r\n//# sourceMappingURL=index.js.map","export const successResponse = () => ({ value: true });\r\nexport const failureResponse = () => ({ value: false });\r\nexport const missingPermissionError = () => new Error('MISSING_PERMISSION');\r\nexport const alreadyRecordingError = () => new Error('ALREADY_RECORDING');\r\nexport const microphoneBeingUsedError = () => new Error('MICROPHONE_BEING_USED');\r\nexport const deviceCannotVoiceRecordError = () => new Error('DEVICE_CANNOT_VOICE_RECORD');\r\nexport const failedToRecordError = () => new Error('FAILED_TO_RECORD');\r\nexport const emptyRecordingError = () => new Error('EMPTY_RECORDING');\r\nexport const recordingHasNotStartedError = () => new Error('RECORDING_HAS_NOT_STARTED');\r\nexport const failedToFetchRecordingError = () => new Error('FAILED_TO_FETCH_RECORDING');\r\nexport const couldNotQueryPermissionStatusError = () => new Error('COULD_NOT_QUERY_PERMISSION_STATUS');\r\n//# sourceMappingURL=predefined-web-responses.js.map","import { Filesystem } from '@capacitor/filesystem';\r\nimport write_blob from 'capacitor-blob-writer';\r\nimport getBlobDuration from 'get-blob-duration';\r\nimport { RecordingStatus } from './definitions';\r\nimport { alreadyRecordingError, couldNotQueryPermissionStatusError, deviceCannotVoiceRecordError, emptyRecordingError, failedToFetchRecordingError, failedToRecordError, failureResponse, missingPermissionError, recordingHasNotStartedError, successResponse, } from './predefined-web-responses';\r\n// these mime types will be checked one by one in order until one of them is found to be supported by the current browser\r\nconst POSSIBLE_MIME_TYPES = {\r\n    'audio/aac': '.aac',\r\n    'audio/webm;codecs=opus': '.ogg',\r\n    'audio/mp4': '.mp3',\r\n    'audio/webm': '.ogg',\r\n    'audio/ogg;codecs=opus': '.ogg',\r\n};\r\nconst neverResolvingPromise = () => new Promise(() => undefined);\r\nexport class VoiceRecorderImpl {\r\n    constructor() {\r\n        this.mediaRecorder = null;\r\n        this.chunks = [];\r\n        this.pendingResult = neverResolvingPromise();\r\n    }\r\n    static async canDeviceVoiceRecord() {\r\n        var _a;\r\n        if (((_a = navigator === null || navigator === void 0 ? void 0 : navigator.mediaDevices) === null || _a === void 0 ? void 0 : _a.getUserMedia) == null || VoiceRecorderImpl.getSupportedMimeType() == null) {\r\n            return failureResponse();\r\n        }\r\n        else {\r\n            return successResponse();\r\n        }\r\n    }\r\n    async startRecording(options) {\r\n        if (this.mediaRecorder != null) {\r\n            throw alreadyRecordingError();\r\n        }\r\n        const deviceCanRecord = await VoiceRecorderImpl.canDeviceVoiceRecord();\r\n        if (!deviceCanRecord.value) {\r\n            throw deviceCannotVoiceRecordError();\r\n        }\r\n        const havingPermission = await VoiceRecorderImpl.hasAudioRecordingPermission().catch(() => successResponse());\r\n        if (!havingPermission.value) {\r\n            throw missingPermissionError();\r\n        }\r\n        return navigator.mediaDevices\r\n            .getUserMedia({ audio: true })\r\n            .then((stream) => this.onSuccessfullyStartedRecording(stream, options))\r\n            .catch(this.onFailedToStartRecording.bind(this));\r\n    }\r\n    async stopRecording() {\r\n        if (this.mediaRecorder == null) {\r\n            throw recordingHasNotStartedError();\r\n        }\r\n        try {\r\n            this.mediaRecorder.stop();\r\n            this.mediaRecorder.stream.getTracks().forEach((track) => track.stop());\r\n            return this.pendingResult;\r\n        }\r\n        catch (ignore) {\r\n            throw failedToFetchRecordingError();\r\n        }\r\n        finally {\r\n            this.prepareInstanceForNextOperation();\r\n        }\r\n    }\r\n    static async hasAudioRecordingPermission() {\r\n        if (navigator.permissions.query == null) {\r\n            if (navigator.mediaDevices == null) {\r\n                return Promise.reject(couldNotQueryPermissionStatusError());\r\n            }\r\n            return navigator.mediaDevices\r\n                .getUserMedia({ audio: true })\r\n                .then(() => successResponse())\r\n                .catch(() => {\r\n                throw couldNotQueryPermissionStatusError();\r\n            });\r\n        }\r\n        return navigator.permissions\r\n            .query({ name: 'microphone' })\r\n            .then((result) => ({ value: result.state === 'granted' }))\r\n            .catch(() => {\r\n            throw couldNotQueryPermissionStatusError();\r\n        });\r\n    }\r\n    static async requestAudioRecordingPermission() {\r\n        const havingPermission = await VoiceRecorderImpl.hasAudioRecordingPermission().catch(() => failureResponse());\r\n        if (havingPermission.value) {\r\n            return successResponse();\r\n        }\r\n        return navigator.mediaDevices\r\n            .getUserMedia({ audio: true })\r\n            .then(() => successResponse())\r\n            .catch(() => failureResponse());\r\n    }\r\n    pauseRecording() {\r\n        if (this.mediaRecorder == null) {\r\n            throw recordingHasNotStartedError();\r\n        }\r\n        else if (this.mediaRecorder.state === 'recording') {\r\n            this.mediaRecorder.pause();\r\n            return Promise.resolve(successResponse());\r\n        }\r\n        else {\r\n            return Promise.resolve(failureResponse());\r\n        }\r\n    }\r\n    resumeRecording() {\r\n        if (this.mediaRecorder == null) {\r\n            throw recordingHasNotStartedError();\r\n        }\r\n        else if (this.mediaRecorder.state === 'paused') {\r\n            this.mediaRecorder.resume();\r\n            return Promise.resolve(successResponse());\r\n        }\r\n        else {\r\n            return Promise.resolve(failureResponse());\r\n        }\r\n    }\r\n    getCurrentStatus() {\r\n        if (this.mediaRecorder == null) {\r\n            return Promise.resolve({ status: RecordingStatus.NONE });\r\n        }\r\n        else if (this.mediaRecorder.state === 'recording') {\r\n            return Promise.resolve({ status: RecordingStatus.RECORDING });\r\n        }\r\n        else if (this.mediaRecorder.state === 'paused') {\r\n            return Promise.resolve({ status: RecordingStatus.PAUSED });\r\n        }\r\n        else {\r\n            return Promise.resolve({ status: RecordingStatus.NONE });\r\n        }\r\n    }\r\n    static getSupportedMimeType() {\r\n        if ((MediaRecorder === null || MediaRecorder === void 0 ? void 0 : MediaRecorder.isTypeSupported) == null)\r\n            return null;\r\n        const foundSupportedType = Object.keys(POSSIBLE_MIME_TYPES).find((type) => MediaRecorder.isTypeSupported(type));\r\n        return foundSupportedType !== null && foundSupportedType !== void 0 ? foundSupportedType : null;\r\n    }\r\n    onSuccessfullyStartedRecording(stream, options) {\r\n        this.pendingResult = new Promise((resolve, reject) => {\r\n            this.mediaRecorder = new MediaRecorder(stream);\r\n            this.mediaRecorder.onerror = () => {\r\n                this.prepareInstanceForNextOperation();\r\n                reject(failedToRecordError());\r\n            };\r\n            this.mediaRecorder.onstop = async () => {\r\n                var _a, _b, _c;\r\n                const mimeType = VoiceRecorderImpl.getSupportedMimeType();\r\n                if (mimeType == null) {\r\n                    this.prepareInstanceForNextOperation();\r\n                    reject(failedToFetchRecordingError());\r\n                    return;\r\n                }\r\n                const blobVoiceRecording = new Blob(this.chunks, { type: mimeType });\r\n                if (blobVoiceRecording.size <= 0) {\r\n                    this.prepareInstanceForNextOperation();\r\n                    reject(emptyRecordingError());\r\n                    return;\r\n                }\r\n                let uri;\r\n                let recordDataBase64;\r\n                if (options != null) {\r\n                    const subDirectory = (_c = (_b = (_a = options.subDirectory) === null || _a === void 0 ? void 0 : _a.match(/^\\/?(.+[^/])\\/?$/)) === null || _b === void 0 ? void 0 : _b[1]) !== null && _c !== void 0 ? _c : '';\r\n                    const path = `${subDirectory}/recording-${new Date().getTime()}${POSSIBLE_MIME_TYPES[mimeType]}`;\r\n                    await write_blob({\r\n                        blob: blobVoiceRecording,\r\n                        directory: options.directory,\r\n                        fast_mode: true,\r\n                        path,\r\n                        recursive: true,\r\n                    });\r\n                    ({ uri } = await Filesystem.getUri({ directory: options.directory, path }));\r\n                }\r\n                else {\r\n                    recordDataBase64 = await VoiceRecorderImpl.blobToBase64(blobVoiceRecording);\r\n                }\r\n                const recordingDuration = await getBlobDuration(blobVoiceRecording);\r\n                this.prepareInstanceForNextOperation();\r\n                resolve({ value: { recordDataBase64, mimeType, msDuration: recordingDuration * 1000, uri } });\r\n            };\r\n            this.mediaRecorder.ondataavailable = (event) => this.chunks.push(event.data);\r\n            this.mediaRecorder.start();\r\n        });\r\n        return successResponse();\r\n    }\r\n    onFailedToStartRecording() {\r\n        this.prepareInstanceForNextOperation();\r\n        throw failedToRecordError();\r\n    }\r\n    static blobToBase64(blob) {\r\n        return new Promise((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                const recordingResult = String(reader.result);\r\n                const splitResult = recordingResult.split('base64,');\r\n                const toResolve = splitResult.length > 1 ? splitResult[1] : recordingResult;\r\n                resolve(toResolve.trim());\r\n            };\r\n            reader.readAsDataURL(blob);\r\n        });\r\n    }\r\n    prepareInstanceForNextOperation() {\r\n        if (this.mediaRecorder != null && this.mediaRecorder.state === 'recording') {\r\n            try {\r\n                this.mediaRecorder.stop();\r\n            }\r\n            catch (error) {\r\n                console.warn('While trying to stop a media recorder, an error was thrown', error);\r\n            }\r\n        }\r\n        this.pendingResult = neverResolvingPromise();\r\n        this.mediaRecorder = null;\r\n        this.chunks = [];\r\n    }\r\n}\r\n//# sourceMappingURL=VoiceRecorderImpl.js.map","import { WebPlugin } from '@capacitor/core';\r\nimport { VoiceRecorderImpl } from './VoiceRecorderImpl';\r\nexport class VoiceRecorderWeb extends WebPlugin {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.voiceRecorderInstance = new VoiceRecorderImpl();\r\n    }\r\n    canDeviceVoiceRecord() {\r\n        return VoiceRecorderImpl.canDeviceVoiceRecord();\r\n    }\r\n    hasAudioRecordingPermission() {\r\n        return VoiceRecorderImpl.hasAudioRecordingPermission();\r\n    }\r\n    requestAudioRecordingPermission() {\r\n        return VoiceRecorderImpl.requestAudioRecordingPermission();\r\n    }\r\n    startRecording(options) {\r\n        return this.voiceRecorderInstance.startRecording(options);\r\n    }\r\n    stopRecording() {\r\n        return this.voiceRecorderInstance.stopRecording();\r\n    }\r\n    pauseRecording() {\r\n        return this.voiceRecorderInstance.pauseRecording();\r\n    }\r\n    resumeRecording() {\r\n        return this.voiceRecorderInstance.resumeRecording();\r\n    }\r\n    getCurrentStatus() {\r\n        return this.voiceRecorderInstance.getCurrentStatus();\r\n    }\r\n}\r\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","Filesystem","WebPlugin"],"mappings":"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"}